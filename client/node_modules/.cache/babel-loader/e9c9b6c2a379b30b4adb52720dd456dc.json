{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\morga\\\\Desktop\\\\Webutvikling\\\\Leaflet_Map\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\Webutvikling\\\\Leaflet_Map\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport Joi from 'joi';\nimport logo from \"./logo.svg\";\nimport L from 'leaflet';\nimport './App.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Card, Button, CardTitle, CardText, Form, FormGroup, Label, Input } from 'reactstrap';\nlet myIcon = L.icon({\n  iconUrl: './user-pin.png',\n  iconSize: [25, 41],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41]\n});\nconst schema = Joi.object().keys({\n  name: Joi.string().regex(/^[A-zÀ-ú -_]{1,70}$/).min(2).max(30).required(),\n  message: Joi.string().min(1).max(300).required()\n});\nconst API_URL = window.location.hostname === 'localhost' ? 'http://localhost:5000/api/v1/messages' : 'production-url-her'; //-----------------------APP----------------------------------//\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: {\n        lat: 51.505,\n        lng: -0.09\n      },\n      haveUserLocation: false,\n      zoom: 3,\n      userMessage: {\n        name: '',\n        message: ''\n      },\n      sendingMessage: false,\n      sentMessage: false,\n      messages: []\n    };\n\n    this.formIsValid = () => {\n      const userMessage = {\n        name: this.state.userMessage.name,\n        message: this.state.userMessage.message\n      };\n      const result = Joi.validate(userMessage, schema);\n      return !result.error && this.state.haveUserLocation ? true : false;\n    };\n\n    this.formSubmitted = event => {\n      event.preventDefault();\n\n      if (this.formIsValid()) {\n        this.setState({\n          sendingMessage: true\n        });\n        fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: this.state.userMessage.name,\n            message: this.state.userMessage.message,\n            latitude: this.state.location.lat,\n            longitude: this.state.location.lng\n          })\n        }).then(res => res.json()).then(message => {\n          console.log(message);\n          setTimeout(() => {\n            this.setState({\n              sendingMessage: false,\n              sentMessage: true\n            });\n          }, 4000);\n        });\n      }\n    };\n\n    this.valueChanged = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState(previousState => ({\n        userMessage: _objectSpread({}, previousState.userMessage, {\n          [name]: value\n        })\n      }));\n    };\n  }\n\n  componentDidMount() {\n    //Henter tidligere meldinger på siden\n    fetch(API_URL).then(res => res.json()).then(messages => {\n      this.setState({\n        messages\n      });\n    });\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        haveUserLocation: true,\n        zoom: 13\n      });\n    }, () => {\n      console.log('No Location given');\n      fetch('https://ipapi.co/json') //turning response into json\n      .then(res => res.json()).then(location => {\n        this.setState({\n          location: {\n            lat: location.latitude,\n            lng: location.longitude\n          },\n          haveUserLocation: true,\n          zoom: 13\n        });\n      });\n    });\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng];\n    return React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), this.state.haveUserLocation ? React.createElement(Marker, {\n      position: position,\n      icon: myIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }) : '', this.state.messages.map(message => React.createElement(Marker, {\n      position: [message.latitude, message.longitude],\n      icon: myIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, message.name, \": \", message.message)))), React.createElement(Card, {\n      body: true,\n      className: \"message-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Finn hverandre!\"), !this.state.sendingMessage && !this.state.sentMessage && this.state.haveUserLocation ? React.createElement(Form, {\n      onSubmit: this.formSubmitted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Navn\"), React.createElement(Input, {\n      onChange: this.valueChanged,\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      placeholder: \"Skriv inn ditt navn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Melding\"), React.createElement(Input, {\n      onChange: this.valueChanged,\n      type: \"textarea\",\n      name: \"message\",\n      id: \"message\",\n      placeholder: \"Din melding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      disabled: !this.formIsValid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Send\")) : this.state.sendingMessage || !this.state.haveUserLocation ? React.createElement(\"video\", {\n      autoPlay: true,\n      loop: true,\n      src: \"https://media.giphy.com/media/BCIRKxED2Y2JO/giphy.mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }) : React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Din melding er registrert.\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\morga\\Desktop\\Webutvikling\\Leaflet_Map\\client\\src\\App.js"],"names":["React","Joi","L","Map","TileLayer","Marker","Popup","Card","Button","CardTitle","CardText","Form","FormGroup","Label","Input","myIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","schema","object","keys","name","string","regex","min","max","required","message","API_URL","window","location","hostname","App","Component","state","lat","lng","haveUserLocation","zoom","userMessage","sendingMessage","sentMessage","messages","formIsValid","result","validate","error","formSubmitted","event","preventDefault","setState","fetch","method","headers","body","JSON","stringify","latitude","longitude","then","res","json","console","log","setTimeout","valueChanged","target","value","previousState","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Joi from 'joi';\nimport logo from './logo.svg';\nimport L from 'leaflet';\nimport './App.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Card, Button, CardTitle, CardText, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\nlet myIcon = L.icon({\n    iconUrl: './user-pin.png',\n    iconSize: [25, 41],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41],\n\n});\n\nconst schema = Joi.object().keys({\n  name: Joi.string().regex(/^[A-zÀ-ú -_]{1,70}$/).min(2).max(30).required(),\n  message: Joi.string().min(1).max(300).required()\n});\n\nconst API_URL = window.location.hostname === 'localhost' ? 'http://localhost:5000/api/v1/messages' : 'production-url-her';\n//-----------------------APP----------------------------------//\nclass App extends React.Component {\n  state = {\n    location: {\n      lat: 51.505,\n      lng: -0.09,\n    },\n    haveUserLocation: false,\n    zoom: 3,\n    userMessage: {\n      name: '',\n      message: ''\n    },\n    sendingMessage : false,\n    sentMessage: false,\n    messages: []\n  }\n  \n  componentDidMount(){\n    //Henter tidligere meldinger på siden\n    fetch(API_URL)\n    .then(res => res.json())\n    .then(messages =>{\n      this.setState({\n        messages\n      });\n    });\n    navigator.geolocation.getCurrentPosition((position)=> {\n                 this.setState({\n                   location: {\n                     lat: position.coords.latitude,\n                     lng: position.coords.longitude\n                   },\n                   haveUserLocation: true,\n                   zoom: 13\n                 });\n            },() =>{\n              console.log('No Location given');\n              fetch('https://ipapi.co/json')\n              //turning response into json\n              .then(res => res.json())\n              .then(location => {\n                this.setState({\n                  location: {\n                    lat: location.latitude,\n                    lng: location.longitude\n                  },\n                  haveUserLocation: true,\n                  zoom: 13\n                });\n              });\n            });\n  }\n  formIsValid = () =>{\n    const userMessage = \n    {\n      name: this.state.userMessage.name,\n      message: this.state.userMessage.message\n    };\n    const result = Joi.validate(userMessage, schema);\n\n    return !result.error && this.state.haveUserLocation ? true : false;\n  }\n\n  formSubmitted = event =>{\n    event.preventDefault()\n    if(this.formIsValid()){\n      this.setState({\n        sendingMessage : true\n      });\n      fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'content-type' : 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.userMessage.name,\n          message: this.state.userMessage.message,\n          latitude : this.state.location.lat,\n          longitude: this.state.location.lng\n        })\n      }).then(res => res.json())\n      .then(message =>{\n        console.log(message);\n        setTimeout(() => {\n            this.setState({\n                sendingMessage : false,\n                sentMessage: true\n            });\n        }, 4000);\n\n      });\n    }\n  };\n\n\n  valueChanged = (event) => {\n    const {name, value} = event.target;\n    this.setState((previousState) => ({\n      userMessage: {\n        ...previousState.userMessage,\n        [name]: value\n      }\n    })); \n  };\n\n  render(){\n  const position = [this.state.location.lat, this.state.location.lng];\n\n  return (\n    <div className=\"map\">\n    <Map className=\"map\" center={position} zoom={this.state.zoom}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {\n          this.state.haveUserLocation ?\n            <Marker position={position}\n                      icon={myIcon}>\n\n            </Marker> : ''\n        }\n        {this.state.messages.map(message =>(\n          <Marker position={[message.latitude, message.longitude]}\n                      icon={myIcon}>\n                                <Popup>\n                                    {message.name}: {message.message}\n                                 </Popup>\n            </Marker>\n        ))}\n      </Map>\n      <Card body className=\"message-form\">\n        <CardTitle>Finn hverandre!</CardTitle>\n        {\n          !this.state.sendingMessage && !this.state.sentMessage && this.state.haveUserLocation ? \n        <Form onSubmit={this.formSubmitted} >\n        <FormGroup>\n          <Label for=\"name\">Navn</Label>\n          <Input\n            onChange={this.valueChanged}\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Skriv inn ditt navn\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"message\">Melding</Label>\n          <Input\n            onChange={this.valueChanged}\n            type=\"textarea\"\n            name=\"message\"\n            id=\"message\"\n            placeholder=\"Din melding\" />\n        </FormGroup>\n        <Button type=\"submit\" color=\"info\" disabled={!this.formIsValid()}>Send</Button>\n      </Form> :\n       this.state.sendingMessage  || !this.state.haveUserLocation?\n          <video autoPlay loop src=\"https://media.giphy.com/media/BCIRKxED2Y2JO/giphy.mp4\"></video>:\n          <CardText>Din melding er registrert.</CardText>\n        }\n      </Card>\n      </div>\n        );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}